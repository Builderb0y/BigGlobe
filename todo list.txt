bugs:
	geode spikes can still spawn outside of geodes.
	creating a world with the custom time speed gamerule either doesn't get setup properly, or doesn't sync to clients properly.
		this is a fabric bug.
	after teleporting to a new world, /bigglobe:locateVoronoi shows suggestions from the old world.
		this is probably a minecraft bug, but I haven't looked at it in a huge amount of detail yet.
	Tripwire is triggered for some chunks not containing a ChunkOfColumns when they should.
		this is caused by distant horizons constructing a new chunk every time you request one.
	immersive portals places the end portal inside the end nest.
		no, it doesn't. it just doesn't load blocks due to assuming the dimension height matches vanilla.
		this is fixed in a later version of immersive portals.
	try nightly build of distant horizons and see if I can debug any memory leaks or anything.

testing:
	cubic chunks compatibility, whenever that's released.
	compatibility with chunk pre-generator mods.
		"chunky" is the one reported to me, and apparently it either
		uses up a stupid amount of RAM, or has a memory leak.

porting:

where I left off:
	lakes and underground pockets still need automatic decorator locations.

changelog:
	* Fixed charred hanging signs not dropping as an item when broken.
	* Fixed bigger desert pyramids potentially spawning with snow around them if they spawned on the side of a cliff.
	* Made delegating structure a bit more useful.
		* biomes, spawn_overrides, step, and terrain_adaptation can now be absent.
			* If they are absent, they default to the structure being delegated to.
		* If spawn_overrides, step, and terrain_adaptation are all absent AND you are in a Big Globe world, then the structure being delegated to will be placed in the world as-is, without being copied.
			* This means that if those 3 properties are absent (and you are in a Big Globe world), then advancements which require you to be inside the structure being delegated to will work as expected.
	* Lakes now behave themselves slightly better when other height-overriding structures intersect with them.
	* Flint, rocks, and sticks no longer spawn in lava lakes.
	* Added config option to make Big Globe the default world type.
	* Fixed crash when flying above the nether roof with your F3 menu open.
	* Immersive portals now places nether portals at the intended location.

AutoCodec:
	log when extra data is provided that isn't a field of the object being deserialized.
	investigate imprinters.
		SerializableScriptInputs failed to have a coder created for the imprinter path.

scripting:
	SwitchInsnTree needs to manage its case scopes more manually.
	expose arrays.
	scriptable RandomSource?
	scripted structure layouts should be able to construct jigsaw structure pieces.
	general-purpose script bytecode optimization framework.
	nested multi-line comment ;(example ;(text) here)
	more invoke syntaxes:
		nullable invoke.
			foo.?bar()
		receiver invoke.
			foo.<bar() returns foo, not the return value of bar().
			add setters to user-defined classes. they could make use of this.
		nullable receiver invoke?
			foo.?<bar() or foo.<?bar()? should both be accepted?
		non-null invoke?
			foo.!bar() requires that bar() return a non-null value.
		nullable non-null invoke?
			foo.?!bar() makes a choice:
				if foo is null, then the result is null and bar() is not invoked.
				if foo is non-null, then bar() is invoked and is required to return a non-null value.
	lambdas?
		Stream API?
	List.shuffle()
	add copy constructor and clone() for user-defined classes.
		clone() is deep copy, constructor is shallow copy?
			this is the more intuitive option, but it is more difficult semantically
			due to the fact that you can't assign to final fields inside clone().
			not that I have final fields yet, but still.
	cache scripts.
	for (int x in [0, 10) % step: body)
		how to handle descending iteration?
		maybe for (int x in -[0, 10) % step: body)?
		should step be auto-negated in this case?
	smarter detection of which variables are captured by methods.
		don't capture variables which aren't used.
	user-defined methods (not functions) in user-defined classes.
	ability to iterate over an Iterator or Stream (whenever stream support is added).
	$: in scripts, substitutes $:foo for 'foo: $foo'

features:
	general:
		advancements for finding things?
		all the todos scattered throughout my code.
		BlockQueue should not use longs for internal storage, as this won't work with cubic chunks.
		make charred hanging sign look a bit more programmer art-y?
		look into a custom loader for scripted configured features that doesn't rely on json format.
		deprecate TagOrObject, just use RegistryEntryList for both, since apparently it can do that.
		re-add BetterRegistry, but better this time.
	overworld:
		alternate curvy shape for biome distribution which compensates for distribution of noise.
		dynamic registry for overriders?
		configurable bedrock amount.
			remove fast logic, replace with configured feature.
			may need sorted feature tag for min_y_decorator.
		desert fossils.
		fallen logs.
		column values for cliff frac and cliff bias.
		allow flowers to place a Feature for every flower.
		ice spikes.
		glaciers.
		log cabin structure?
		medium and large house structures?
		trees:
			roots.
				use for mangrove trees.
		cave biomes:
			lush:
				walls:
					glow lichen.
					vines.
			mushroom:
				glowing mushrooms?
					that hang from the ceiling?
			frozen?
				floor:
					snow.
					maybe some ice sprinkled in with the snow.
			sandy?
				floor:
					sand.
					sandstone under that.
		make geode placement faster by only computing noise in a sphere instead of a cube.
		more types of geodes/more colors of pretty crystals?
		make underground pocket placement faster by only computing noise in a circle instead of a square.
		dungeons:
			piles of gold?
			occasional "big rooms".
		underground pockets:
			molten? (match molten caves)
				maybe just put blackstone inside lava pockets?
			frozen?
			adjust cave exclusion policy to only exclude on the bottom half, and allow intersections on the top half?
			add "center" noise?
		make lilypads renewable?
		sandstone small house variant.
	nether:
	end:
		block of void?
			void ingots?
				void tools?
				void armor?
		asteroids in the void biome.
		ender clam?
			source of ender pearls.

before release:
	make sure nothing in test package is used.
	disable BigGlobeItems.TEST_ITEM.
	ensure BigGlobeChunkGenerator.WORLD_SLICES is set to false.
	make sure SerializableBlockQueue.DEBUG_ALWAYS_SERIALIZE is set to false.

porting:
	check how ChunkSection counts are used.
		in particular, see if nonEmptyFluidCount is still returned by hasRandomFluidTicks().
		this usage matters for SectionGenerationContext.recalculateCounts().
	see if CactusBlock uses BlockTags.SAND for placement logic.
		if it does, remove mixin for making it placeable on overgrown sand.

back-porting from 1.20 to 1.19.4:
	re-enable lighting update suppression in BlockQueue.
	SpelunkingRopeBlock block needs to override getPistonBehavior() to return DESTROY.
	RopeAnchorBlock needs to override getPistonBehavior() to return BLOCK.
	SurfaceMaterialDecorationBlock needs to override getPistonBehavior() to return DESTROY.
	loot tables for wart_weed and charred_leaves need to use "condition": "alternative" instead of "any_of".
	@VerifyNormal needs to verify that the block does not emit light.
	CactusBlock_AllowPlacementOnOvergrownSand needs to be re-enabled.
	re-enable lighting in SectionGenerationContext.
	remove replaceable_plants block tag and just use Material.PLANT in MaterialVersions instead.
	remove hanging signs and cherry stuff.
		remove hanging signs in WoodPalette.
		list of places where hanging signs appear:
			assets/bigglobe/textures/entity/signs/hanging/
			data/bigglobe/bigglobe_wood_palettes/charred.json
			data/minecraft/bigglobe_wood_palettes/*
			data/bigglobe/recipes/charred_hanging_sign.json
			data/bigglobe/loot_tables/charred_hanging_sign.json
		list of places where cherry trees appear:
			honestly just double-shift search for "cherry".
			and then search in src for "cherry".
	remove references to trail ruins:
		data/bigglobe/worldgen/configured_feature/overworld/overriders/structures/trail_ruins.json
		data/bigglobe/worldgen/configured_feature/overworld/overriders/caves/trail_ruins.json
		data/minecraft/tags/worldgen/biome/has_structure/trail_ruins.json
	SurfaceMaterialDecorationBlock needs to override getPistonBehavior() to return DESTROY.
	re-enable lighting in BigGlobeChunkGenerator.generateSectionsParallel().
	remove immersive portals mixin until immersive portals back-ports to 1.19.4.
	revert minecraft version dependency in fabric.mod.json.

back-porting from 1.19.4 to 1.19.2:
	remove BiomeDownfallAccessor.
	remove BigGlobeGameRules.SOUL_LAVA_CONVERSION.
	re-add call to BigGlobeDynamicRegistries.addBuiltin() in mod initializer.
	fix SlimeEntity_AllowSpawningFromSpawner.
	fix OceanMonumentGeneratorBase_VanillaBugFixes.
	re-add structureSetRegistry pseudo-field to BigGlobeChunkGenerator.
		include getter.
	revert biomes to re-add precipitation field.
	ensure ball of string adds correct NBT variants to creative menu.
		and doesn't add itself to the wrong tabs.
	that as the minimum compatible version in fabric.mod.json.