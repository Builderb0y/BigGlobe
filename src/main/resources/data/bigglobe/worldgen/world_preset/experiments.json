{
	"dimensions": {
		"bigglobe:tetrahedron": {
			"type": "bigglobe:overworld",
			"generator": {
				"type": "bigglobe:scripted",
				"biome_source": {
					"type": "minecraft:fixed",
					"biome": "minecraft:plains"
				},
				"height": {
					"min_y": -1024,
					"max_y":  1024
				},
				"layer": {
					"state": "'minecraft:air'",
					"children": [
						{
							"type": "simple_2d",
							"state": "'minecraft:iron_block'",
							"valid": {
								"min_y": "x # z",
								"max_y": "(x # z) + 1"
							}
						}
					]
				},
				"feature_dispatcher": {
					"rock_replacers": [],
					"raw": "bigglobe:noop",
					"normal": "bigglobe:noop"
				},
				"overriders": "bigglobe:empty"
			}
		},
		"bigglobe:octahedron": {
			"type": "bigglobe:overworld",
			"generator": {
				"type": "bigglobe:scripted",
				"biome_source": {
					"type": "minecraft:fixed",
					"biome": "minecraft:plains"
				},
				"height": {
					"min_y": -1024,
					"max_y":  1024
				},
				"layer": {
					"state": "'minecraft:air'",
					"children": [
						{
							"type": "simple_3d",
							"state": "'minecraft:iron_block'",
							"condition": [
								"int iterX = x",
								"int iterY = y",
								"int iterZ = z",
								"for (int step = 512, step != 0, step >>>= 1:",
									"iterX = abs(iterX)",
									"iterY = abs(iterY)",
									"iterZ = abs(iterZ)",
									"if      (iterX > iterY && iterX > iterZ: iterX -= step)",
									"else if (iterY > iterX && iterY > iterZ: iterY -= step)",
									"else if (iterZ > iterX && iterZ > iterY: iterZ -= step)",
									"else (break())",
								")",
								"return(iterX == 0 && iterY == 0 && iterZ == 0)"
							]
						}
					]
				},
				"feature_dispatcher": {
					"rock_replacers": [],
					"raw": "bigglobe:noop",
					"normal": "bigglobe:noop"
				},
				"overriders": "bigglobe:empty"
			}
		},
		"bigglobe:memger_sponge": {
			"type": "bigglobe:overworld",
			"generator": {
				"type": "bigglobe:scripted",
				"biome_source": {
					"type": "minecraft:fixed",
					"biome": "minecraft:plains"
				},
				"height": {
					"min_y": -1024,
					"max_y":  1024
				},
				"layer": {
					"state": "'minecraft:iron_block'",
					"children": [
						{
							"type": "simple_3d",
							"state": "'minecraft:air'",
							"condition": [
								"int iterX = abs(x)",
								"int iterY = abs(y)",
								"int iterZ = abs(z)",
								"for (int scale in range[0, 20):",
									"if (abs(iterX % 3 - 1) + abs(iterY % 3 - 1) + abs(iterZ % 3 - 1) <= 1:",
										"return(true)",
									")",
									"iterX /= 3",
									"iterY /= 3",
									"iterZ /= 3",
									"if (iterX == 0 && iterY == 0 && iterZ == 0: break())",
								")",
								"return(false)"
							]
						}
					]
				},
				"feature_dispatcher": {
					"rock_replacers": [],
					"raw": "bigglobe:noop",
					"normal": "bigglobe:noop"
				},
				"overriders": "bigglobe:empty"
			}
		},
		"minecraft:overworld": {
			"type": "minecraft:overworld",
			"generator": {
				"type": "bigglobe:scripted",
				"biome_source": {
					"type": "minecraft:fixed",
					"biome": "minecraft:plains"
				},
				"height": {
					"min_y": -64,
					"max_y": 320,
					"sea_level": 128
				},
				"layer": {
					"state": "'minecraft:air'",
					"children": [
						{
							"type": "simple_2d",
							"state": "'minecraft:stone'",
							"valid": {
								"max_y": [
									"double height = 0.0L",
									"double deltaX = 0.0L",
									"double deltaZ = 0.0L",
									"long seed = worldSeed # 16x1CD6D7C5D97EB6E1UL",
									"for (int iteration in range[0, 512):",
										"double angle = (seed := seed.newSeed()).nextDouble(tau)",
										"double phase = (seed := seed.newSeed()).nextDouble(tau)",
										"double baseAmplitude = exp(iteration / -128.0L + 4.0L)",
										"double unitX = cos(angle)",
										"double unitZ = sin(angle)",
										"double project = (x * unitX + z * unitZ) / baseAmplitude + phase",
										"double adjustedAmplitude = 1.0L - (unitX * deltaX + unitZ * deltaZ) ^ 2 / (deltaX ^ 2 + deltaZ ^ 2 + 16.0L)",
										"double deltaProject = -cos(project) * adjustedAmplitude",
										"height += sin(project) * baseAmplitude * adjustedAmplitude",
										"deltaX += unitX * deltaProject",
										"deltaZ += unitZ * deltaProject",
									")",
									"int(height * 0.0625L + 128.0L)"
								]
							}
						}
					]
				},
				"feature_dispatcher": {
					"rock_replacers": [],
					"raw": "bigglobe:noop",
					"normal": "bigglobe:noop"
				},
				"overriders": "bigglobe:empty"
			}
		}
	}
}