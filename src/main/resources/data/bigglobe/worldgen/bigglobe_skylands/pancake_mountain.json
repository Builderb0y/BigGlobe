{
	"weight": 1.0,
	"average_center": { "type": "uniform", "min": 256.0, "max": 768.0 },
	"floor_decorator": "bigglobe:overworld/skylands/lush_top",
	"ceiling_decorator": "bigglobe:overworld/skylands/lush_bottom",
	"center": {
		"type": "sum",
		"layers": [
			{ "type": "cubic", "scaleX": 256, "scaleY": 256, "amplitude": 16.0 },
			{ "type": "cubic", "scaleX": 128, "scaleY": 128, "amplitude":  8.0 },
			{ "type": "cubic", "scaleX":  64, "scaleY":  64, "amplitude":  6.0 },
			{ "type": "cubic", "scaleX":  32, "scaleY":  32, "amplitude":  4.0 },
			{ "type": "cubic", "scaleX":  16, "scaleY":  16, "amplitude":  1.0 }
		]
	},
	"thickness": {
		"type": "sum",
		"layers": [
			{ "type": "cubic", "scaleX": 64, "scaleY": 64, "amplitude": 0.5 },
			{ "type": "cubic", "scaleX": 32, "scaleY": 32, "amplitude": 0.25 },
			{ "type": "cubic", "scaleX": 16, "scaleY": 16, "amplitude": 0.125 },
			{ "type": "cubic", "scaleX":  8, "scaleY":  8, "amplitude": 0.0625 }
		]
	},
	"auxiliary_noise": {
		"type": "script",
		"script": "3.0 * value ^ 2 + 1.0",
		"min": 1.0,
		"max": 4.0,
		"inputs": {
			"value": {
				"type": "sum",
				"layers": [
					{ "type": "constant", "value": 0.5 },
					{ "type": "smooth", "scaleX": 256, "scaleY": 256, "amplitude": 0.25 },
					{ "type": "smooth", "scaleX": 128, "scaleY": 128, "amplitude": 0.125 },
					{ "type": "smooth", "scaleX":  64, "scaleY":  64, "amplitude": 0.0625 },
					{ "type": "smooth", "scaleX":  32, "scaleY":  32, "amplitude": 0.03125 },
					{ "type": "smooth", "scaleX":  16, "scaleY":  16, "amplitude": 0.015625 }
				]
			}
		}
	},
	"max_y": [
		"if (`max_y` >= -64.0: return(nan))",
		"double cellBias   = `overworld/skyland_edginess_squared`",
		"double heightBias = max(unmixLinear(-128.0, -64.0, `max_y`), 0.0) ^ 2",
		"double bias2      = (cellBias + heightBias) * `overworld/skyland_auxiliary_noise` ;don't go all the way to the edges of the cell.",
		"if (bias2 >= 1.0: return(nan))",
		"double bias1      = sqrt(bias2)",
		"double holes      = `overworld/skyland_thickness`",
		"holes             = holes * (bias1 * 0.5 + 0.25) + (bias1 * -0.5 + 0.75)",
		"if (holes <= 0.0: return(nan))",
		"double mountain   = (1.0 - bias1) / (bias1 * 8.0 + 1.0)",
		"double center     = `overworld/skyland_center`",
		"return(center + sqrt(mountain * holes) * 128.0)"
	],
	"min_y": [
		"if (`max_y` >= -64.0: return(nan))",
		"double cellBias   = `overworld/skyland_edginess_squared`",
		"double heightBias = max(unmixLinear(-128.0, -64.0, `max_y`), 0.0) ^ 2",
		"double bias2      = (cellBias + heightBias) * `overworld/skyland_auxiliary_noise` ;don't go all the way to the edges of the cell.",
		"if (bias2 >= 1.0: return(nan))",
		"double bias1      = sqrt(bias2)",
		"double holes      = `overworld/skyland_thickness`",
		"holes             = holes * (bias1 * 0.5 + 0.25) + (bias1 * -0.5 + 0.75)",
		"if (holes <= 0.0: return(nan))",
		"double dip        = 1.0 - bias2",
		"double center     = `overworld/skyland_center`",
		"return(center - sqrt(dip * holes) * 32.0)"
	],
	"surface": {
		"primary": {
			"top": "minecraft:grass_block[snowy=false]",
			"under": "minecraft:dirt"
		},
		"primary_depth": "random.nextDouble(3.0, 5.0) - (`overworld/skyland_max_y` - `overworld/skyland_center`) / 16.0 - slope_squared"
	}
}