{
	"type": "column_value",
	"feature_generation": false,
	"script": [
		"if (!hints.carve: return())",
		"void excludeSurface(double amount:",
			"if (amount > 0.0L:",
				"double basicY     = world_traits.`bigglobe:approximate_surface_y`",
				"double processedY = world_traits.`bigglobe:exact_surface_y`",
				"for (int y in range(floorInt(basicY - 16.0L), ceilInt(processedY)):",
					"double amountForY = unmixLinear(basicY - 16.0L, basicY, y)",
					"world_traits.`bigglobe:cave_noise`(y) += float(amountForY ^ 2 * amount)",
				")",
			")",
		")",
		"for (StructureStart start in structures:",
			"if (start.structure.type ==. 'minecraft:jigsaw' && start.structure.generationStep == 'surface_structures':",
				"for (StructurePiece piece in start.pieces:",
					"int diameter = max(piece.sizeX, piece.sizeZ) + 1",
					"double radius = diameter * 0.5L",
					"double distance = distanceToCircle(piece, radius)",
					"double mixLevel = smooth(1.0 - distance / min(radius, 16.0L))",
					"excludeSurface(mixLevel)",
				")",
			")",
			"else if (start.structure.isIn('bigglobe:lakes'):",
				"double distance = distanceToCircle(start)",
				"double mixLevel = smooth(1.0L - distance * 0.0625L)",
				"excludeSurface(mixLevel)",
			")",
			"else if (start.structure ==. 'bigglobe:campfire':",
				"int limit = min(2, start.pieces.size)",
				"for (int index = 0, index < limit, ++index:",
					"StructurePiece piece = start.pieces.(index)",
					"double distance = distanceToCircle(piece, 4.0L)",
					"double mixLevel = smooth(1.0L - distance * 0.125L)",
					"excludeSurface(mixLevel)",
				")",
			")",
			"else if (start.structure ==. 'bigglobe:small_house':",
				"StructurePiece piece = start.pieces.(0)",
				"double distance = distanceToCircle(piece, 4.0L)",
				"double mixLevel = smooth(1.0L - distance * 0.0625L)",
				"excludeSurface(mixLevel)",
				"if (start.pieces.size > 1:",
					"piece = start.pieces.(1)",
					"distance = distanceToSquare(piece)",
					"mixLevel = smooth(1.0L - distance * 0.0625L)",
					"excludeSurface(mixLevel)",
				")",
			")",
			"else if (",
				"start.structure ==. 'bigglobe:medium_house' ||",
				"start.structure ==. 'bigglobe:large_house'",
			":",
				"double distance = distanceToSquare(start)",
				"double mixLevel = smooth(1.0L - distance * 0.0625L)",
				"excludeSurface(mixLevel)",
			")",
			"else if (",
				"start.structure ==. 'bigglobe:windmill' ||",
				"start.structure ==. 'bigglobe:well'",
			":",
				"double distance = distanceToCircle(start, 4.0L)",
				"excludeSurface(smooth(1.0L - distance * 0.125L))",
			")",
			"else if (",
				"start.structure.type ==. 'minecraft:desert_pyramid' ||",
				"start.structure.type ==. 'bigglobe:bigger_desert_pyramid' ||",
				"start.structure.type ==. 'minecraft:woodland_mansion' ||",
				"start.structure      ==. 'bigglobe:log_cabin'",
			":",
				"double distance = distanceToSquare(start)",
				"excludeSurface(smooth(1.0L - distance * 0.125L))",
			")",
		")"
	]
}