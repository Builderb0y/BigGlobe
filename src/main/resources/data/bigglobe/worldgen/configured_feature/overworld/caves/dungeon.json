{
	"type": "bigglobe:script",
	"config": {
		"script": [
			"BlockState maybeMossy(:",
				"random.if ('mossy_cobblestone')",
				"else ('cobblestone')",
			")",

			"int floorY  = originY - 1",
			"int radiusX = random.nextInt(4, 8)",
			"int height  = random.nextInt(3, 6)",
			"int radiusZ = random.nextInt(4, 8)",

			";check area.",
			"for (int checkX = -radiusX, checkX <= radiusX, ++checkX:",
				"for (int checkZ = -radiusZ, checkZ <= radiusZ, ++checkZ:",
					"unless (getBlockState(originX + checkX, floorY - 1, originZ + checkZ).blocksLight(): return(false))",
				")",
			")",

			";fill main area.",
			"for (int offsetX = -radiusX, offsetX <= radiusX, ++offsetX:",
				"for (int offsetZ = -radiusZ, offsetZ <= radiusZ, ++offsetZ:",
					"if (offsetX == -radiusX || offsetX == radiusX || offsetZ == -radiusZ || offsetZ == radiusZ:",
						";wall",
						"setBlockState(originX + offsetX, floorY, originZ + offsetZ, maybeMossy())",
						"boolean inWall = true",
						"for (int offsetY = 0, offsetY < height, ++offsetY:",
							"inWall &&= random.nextBoolean()",
							"setBlockState(originX + offsetX, originY + offsetY, originZ + offsetZ,",
								"inWall || getBlockState(originX + offsetX, originY + offsetY, originZ + offsetZ).blocksLight()",
								"? maybeMossy()",
								": 'air'",
							")",
						")",
					")",
					"else (",
						";not wall",
						"setBlockState(originX + offsetX, floorY, originZ + offsetZ,",
							"random.if (0.25: 'air')",
							"else (maybeMossy())",
						")",
						"for (int offsetY = 0, offsetY < height, ++offsetY:",
							"setBlockState(originX + offsetX, originY + offsetY, originZ + offsetZ, 'air')",
						")",
					")",
				")",
			")",

			";place chests.",
			"repeat(random.nextInt(0, 4):",
				"int x = 0",
				"int z = 0",
				"String direction = null",
				"random.switch(",
					"(direction = 'south',, z = 1 - radiusZ,, x = random.nextInt(1 - radiusX, radiusX)),",
					"(direction = 'north',, z = radiusZ - 1,, x = random.nextInt(1 - radiusX, radiusX)),",
					"(direction = 'east',,  x = 1 - radiusX,, z = random.nextInt(1 - radiusZ, radiusZ)),",
					"(direction = 'west',,  x = radiusX - 1,, z = random.nextInt(1 - radiusZ, radiusZ))",
				")",
				"if (",
					"getBlockState(originX + x, originY, originZ + z).isAir() &&",
					"getBlockState(originX + x, floorY,  originZ + z).hasFullCubeCollision()",
				":",
					"setBlockState (originX + x, originY, originZ + z, BlockState('chest', facing: direction, type: 'single', waterlogged: false))",
					"mergeBlockData(originX + x, originY, originZ + z, nbtCompound(",
						"LootTable: 'minecraft:chests/simple_dungeon',",
						"LootTableSeed: random.nextLong()",
					"))",
				")",
			")",

			";place spawner",
			"setBlockState(originX, originY, originZ, 'minecraft:spawner')",
			"mergeBlockData(originX, originY, originZ, nbtCompound(",
				"SpawnData: nbtCompound(",
					"entity: nbtCompound(",
						"id: random.nextBoolean() ? 'minecraft:skeleton' : 'minecraft:zombie'",
					")",
				")",
			"))",

			"return(true)"
		]
	}
}