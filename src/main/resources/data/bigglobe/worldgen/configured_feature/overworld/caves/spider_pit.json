{
	"type": "bigglobe:script",
	"config": {
		"script": [
			"double centerX = originX + random.nextDouble(-0.5, +0.5)",
			"double centerY = originY + random.nextDouble(-1.5, -0.5)",
			"double centerZ = originZ + random.nextDouble(-0.5, +0.5)",
			"double radiusH = random.nextDouble(6.0, 12.0)",
			"double radiusV = random.nextDouble(3.0,  6.0)",
			"int minX =  ceilInt(centerX - radiusH)",
			"int minY =  ceilInt(centerY - radiusV)",
			"int minZ =  ceilInt(centerZ - radiusH)",
			"int maxX = floorInt(centerX + radiusH)",
			"int maxY = floorInt(centerY + radiusV)",
			"int maxZ = floorInt(centerZ + radiusH)",

			";check area",
			"for (int checkX = minX, checkX <= maxX, ++checkX:",
				"for (int checkZ = minZ, checkZ <= maxZ, ++checkZ:",
					"unless (getBlockState(checkX, minY, checkZ).blocksLight(): return(false))",
				")",
			")",

			";clear out ellipsoid",
			"double rcpH = 1.0 / radiusH",
			"double rcpV = 1.0 / radiusV",
			"boolean caveSpider = random.nextBoolean(0.125)",
			"for (int x = minX, x <= maxX, ++x:",
				"double x2 = ((x - centerX) * rcpH) ^ 2",
				"for (int z = minZ, z <= maxZ, ++z:",
					"double xz2 = x2 + ((z - centerZ) * rcpH) ^ 2",
					"if (xz2 < 1.0:",
						"for (int y = minY, y <= maxY, ++y:",
							"double xyz2 = xz2 + ((y - centerY) * rcpV) ^ 2",
							"if (xyz2 < 1.0:",
								"BlockState oldState = getBlockState(x, y, z)",
								"if (oldState.blocksLight():",
									"setBlockState(x, y, z,",
										"random.nextBoolean(caveSpider ? 0.5 : 0.125)",
										"? 'minecraft:cobweb'",
										": 'minecraft:air'",
									")",
								")",
								"else unless (oldState.isAir():",
									"setBlockState(x, y, z, 'minecraft:air')",
								")",
							")",
						")",
					")",
				")",
			")",

			";place spawner",
			"setBlockState(originX, minY + 2, originZ, 'minecraft:spawner')",
			"mergeBlockData(originX, minY + 2, originZ, nbtCompound(",
				"SpawnData: nbtCompound(",
					"entity: nbtCompound(",
						"id: caveSpider ? 'minecraft:cave_spider' : 'minecraft:spider'",
					")",
				")",
			"))",

			"return(true)"
		]
	}
}