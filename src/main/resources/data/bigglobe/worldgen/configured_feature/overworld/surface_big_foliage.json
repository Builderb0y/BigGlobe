{
	"type": "bigglobe:script",
	"config": {
		"script": {
			"debug_name": "ConfiguredFeatureOverworldSurfaceBigFoliage",
			"source": [
				";handle cave intersecting surface.",
				"block (",
					"unless (isYLevelValid(originY): return(false))",
					"else if (getBlockState(originX, originY - 1, originZ).isReplaceable(): --originY,, continue())",
				")",

				"Biome biome = getBiome(originX, originY, originZ)",
				"double foliage = `overworld/height_adjusted_foliage`",
				"ConfiguredFeature feature1 = null ;trees or coral",
				"ConfiguredFeature feature2 = null ;bushes",
				"ConfiguredFeature feature3 = null ;kelp, bamboo, or cactus",
				"double feature3Chance = foliage * 0.125",
				"if (biome == Biome('bigglobe:ocean') || biome == Biome('bigglobe:deep_ocean'):",
					"feature1 = 'minecraft:warm_ocean_vegetation'",
					"feature3 = 'bigglobe:overworld/kelp'",
				")",
				"else (",
					"feature1 = WoodPalette.randomForBiome(biome).?features.?('natural_surface')",
					"feature2 = 'bigglobe:overworld/bush'",
					"if (biome.isIn('bigglobe:forest'):",
						"if (biome.isIn('bigglobe:hot'):",
							"feature3 = 'bigglobe:overworld/cactus'",
							"feature3Chance = max(foliage * 2.0 + 1.0, 0.0)",
							"feature3Chance /= feature3Chance + 1.0",
							"feature3Chance *= 0.03125",
						")",
						"else if (biome.isIn('bigglobe:cold'):",
							"noop",
						")",
						"else (",
							"feature3 = 'bigglobe:overworld/bamboo'",
						")",
					")",
					"else (",
						"if (biome.isIn('bigglobe:hot'):",
							"feature3 = 'bigglobe:overworld/cactus'",
							"feature3Chance = max(foliage * 2.0 + 1.0, 0.0)",
							"feature3Chance /= feature3Chance + 1.0",
							"feature3Chance *= 0.03125",
						")",
					")",
				")",

				"if (feature1 != null && random.nextBoolean(foliage * 0.0625):",
					"return(placeFeature(originX, originY, originZ, feature1))",
				")",
				"if (feature2 != null && random.nextBoolean(foliage * 0.0625):",
					"return(placeFeature(originX, originY, originZ, feature2))",
				")",
				"if (feature3 != null && random.nextBoolean(feature3Chance):",
					"return(placeFeature(originX, originY, originZ, feature3))",
				")",
				"return(false)"
			]
		}
	}
}