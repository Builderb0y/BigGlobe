{
	"type": "bigglobe:script",
	"config": {
		"script": {
			"debug_name": "ConfiguredFeatureEndNestSpike",
			"source": [
				"class Column (int x,, int z)",
				"Column Column.at(int x, int z:",
					"this.=$x(x).=$z(z)",
				")",
				"class Height (int y)",
				"int findGround(int x, int z:",
					"int y = originY",
					"until (`bigglobe:end/nest_noise`(x, y, z) > 0.0L:",
						"unless (isYLevelValid(:--y): return(16x8000_0000U))",
					")",
					"return(y + 1)",
				")",
				"void placeColumn(Column column, Height height:",
					"int x = column.x",
					"int z = column.z",
					"int minY = findGround(x, z)",
					"if (minY == 16x8000_0000U: return())",
					"for (int y in range[minY, minY + height.y):",
						"setBlockState(x, y, z, 'minecraft:obsidian')",
					")",
				")",

				"int groundZero = findGround(originX, originZ)",
				"if (groundZero == 16x8000_0000U: return(false))",
				"int maxHeightI = originY - groundZero",
				"double standardDeviation = sqrt(maxHeightI * 0.25L)",

				";generate initial heights above lava level.",
				";the 'heights' map maps Columns to Heights.",
				"HashMap heights = new()",
				"Column column = new()",
				"while ((Height height = heights.(column.at(originX, originZ)),, height == null || height.y <= maxHeightI):",
					"column.x = roundInt(random.nextGaussian(column.x, standardDeviation))",
					"column.z = roundInt(random.nextGaussian(column.z, standardDeviation))",
					"if ((column.x - originX) ^ 2 + (column.z - originZ) ^ 2 > max(standardDeviation * 4.0L, 2.0L) ^ 2: continue())",
					"Height height = heights.(column)",
					"if (height != null: ++height.y)",
					"else (heights.(Column.new(column.x, column.z)) = Height.new(0))",
				")",

				";place blocks.",
				"for (Column c, Height height in heights:",
					"placeColumn(c, height)",
				")",

				";place crystal.",
				"summon(originX + 0.5L, originY + 1, originZ + 0.5L, 'minecraft:end_crystal', nbtCompound(ShowBottom: 0))",

				"return(true)"
			]
		}
	}
}