{
	"type": "bigglobe:script",
	"value": {
		"biomes": "#bigglobe:has_structure/well",
		"spawn_overrides": {},
		"step": "surface_structures",
		"layout": {
			"script": [
				"void positionPiece(ScriptStructurePiece from, ScriptStructurePiece to:",
					"if (from.placement == StructurePlacementScript('bigglobe:surface_mineshaft/staircase'):",
						"to.rotateAround(0, 0, from.rotation)",
						"switch (from.rotation:",
							"case(  0: to.offset(from.maxX + 1, from.minY, from.midZ    ))",
							"case( 90: to.offset(from.midX,     from.minY, from.maxZ + 1))",
							"case(180: to.offset(from.minX - 1, from.minY, from.midZ    ))",
							"case(270: to.offset(from.midX,     from.minY, from.minZ - 1))",
						")",
					")",
					"else if (from.placement == StructurePlacementScript('bigglobe:surface_mineshaft/tunnel'):",
						"int rotation = random.nextInt(4) * 90",
						"to.rotateAround(0, 0, rotation)",
						"switch (rotation:",
							"case(  0: to.offset(from.maxX, from.minY, random.nextInt(from.minZ + 2, from.maxZ - 1)))",
							"case( 90: to.offset(random.nextInt(from.minX + 2, from.maxX - 1), from.minY, from.maxZ))",
							"case(180: to.offset(from.minX, from.minY, random.nextInt(from.minZ + 2, from.maxZ - 1)))",
							"case(270: to.offset(random.nextInt(from.minX + 2, from.maxX - 1), from.minY, from.minZ))",
						")",
					")",
					"else (",
						"int rotation = random.nextInt(4) * 90",
						"to.rotateAround(0, 0, rotation)",
						"switch (rotation:",
							"case(  0: to.offset(from.maxX, from.minY, from.midZ))",
							"case( 90: to.offset(from.midX, from.minY, from.maxZ))",
							"case(180: to.offset(from.minX, from.minY, from.midZ))",
							"case(270: to.offset(from.midX, from.minY, from.minZ))",
						")",
					")",
				")",

				"boolean addIfNoIntersection(StructurePiece from, StructurePiece toAdd:",
					"for (StructurePiece piece in pieces:",
						"if (",
							"(",
								"from != piece &&",
								"piece.maxX >= toAdd.minX &&",
								"piece.minX <= toAdd.maxX &&",
								"piece.maxY >= toAdd.minY &&",
								"piece.minY <= toAdd.maxY &&",
								"piece.maxZ >= toAdd.minZ &&",
								"piece.minZ <= toAdd.maxZ",
							") || (",
								"toAdd.maxY >= max_y(toAdd.minX, toAdd.minZ) ||",
								"toAdd.maxY >= max_y(toAdd.minX, toAdd.maxZ) ||",
								"toAdd.maxY >= max_y(toAdd.maxX, toAdd.minZ) ||",
								"toAdd.maxY >= max_y(toAdd.maxX, toAdd.maxZ)",
							")",
						":",
							"return(false)",
						")",
					")",
					"pieces.add(toAdd)",
					"return(true)",
				")",

				"int y = ceilInt(max_y(x, z))",
				"Biome biome = getBiome(x, y, z)",
				"WoodPalette palette = (",
					"biome.isIn('bigglobe:has_structure/mega_tree/cherry')",
					"&& random.nextBoolean(0.25)",
					"? WoodPalette('minecraft:cherry')",
					": WoodPalette.randomForBiome(biome)",
				")",
				"if (palette == null: return())",

				"ScriptStructurePiece newPiece(:",
					"NbtCompound nbt = nbtCompound(palette: palette.id)",
					"random.switch(",
						"ScriptStructurePiece.new(",
							"int length = random.nextInt(6, 12),,",
							"0, 2 - length, -2, length, 4, 2,",
							"'bigglobe:surface_mineshaft/staircase',",
							"nbt",
						"),",
						"ScriptStructurePiece.new(",
							"int length = random.nextInt(6, 12),,",
							"0, 0, -2, length, 4, 2,",
							"'bigglobe:surface_mineshaft/tunnel',",
							"nbt",
						"),",
						"ScriptStructurePiece.new(",
							"int height = random.nextInt(6, 12),,",
							"-1, -height, -3, 5, 4, 3,",
							"'bigglobe:surface_mineshaft/ladder',",
							"nbt",
						"),",
						"ScriptStructurePiece.new(",
							"int radiusX = random.nextInt(2, 6),,",
							"int radiusZ = random.nextInt(2, 6),,",
							"-1, 0, -radiusZ, radiusX << 1 - 1, 2 + min(radiusX, radiusZ), radiusZ,",
							"'bigglobe:surface_mineshaft/room',",
							"nbt",
						")",
					")",
				")",

				"pieces.add(",
					"ScriptStructurePiece.new(",
						"int length = random.nextInt(10, 20)",
						"1, 1 - length, -2, length + 1, 3, 2,",
						"'bigglobe:surface_mineshaft/staircase',",
						"nbtCompound(palette: palette.id, start: true)",
					")",
					".rotateAround(0, 0, random.nextInt(4) * 90)",
					".offset(x, y, z)",
				")",

				"int desiredPieces = random.nextInt(32, 128)",
				"for (int attempt = 0, attempt < 1024 && pieces.size < desiredPieces, ++attempt:",
					"ScriptStructurePiece from = pieces.(random.nextInt(pieces.size))",
					"ScriptStructurePiece toAdd = newPiece()",
					"positionPiece(from, toAdd)",
					"addIfNoIntersection(from, toAdd)",
				")",

				"if (pieces.size == 1: pieces.removeIndex(0))"
			]
		}
	}
}