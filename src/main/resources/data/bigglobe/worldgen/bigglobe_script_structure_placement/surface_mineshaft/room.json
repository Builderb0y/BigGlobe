{
	"raw_placement": [
		"fillBlockState(minX + 1, minY + 1, minZ + 1, maxX - 1, data.maxY.asInt() - 1, maxZ - 1, 'minecraft:air')"
	],
	"placement": [
		"WoodPalette palette = WoodPalette(data.palette.asString())",
		"fillBlockStateReplaceable(minX + 1, minY, minZ + 1, maxX - 1, minY, maxZ - 1, palette.planksState())",

		";chests, crafting tables, and furnaces.",
		"random.if (",
			"int*(dx = 0, dz = 0)",
			"String direction = null",
			"random.switch (",
				"(direction = 'south',, dz = -1),",
				"(direction = 'north',, dz =  1),",
				"(direction = 'east' ,, dx = -1),",
				"(direction = 'west' ,, dx =  1)",
			")",
			"int*(radiusX = maxX - midX, radiusZ = maxZ - midZ)",
			"if (getBlockState(midX + radiusX * dx, minY + 1, midZ + radiusZ * dz).hasFullCubeOutline():",
				"--radiusX",
				"--radiusZ",
				"int*(x = midX + radiusX * dx, z = midZ + radiusZ * dz)",
				"random.switch (",
					"fillBlockState(",
						"x - dz, minY + 1,                    z - dx,",
						"x + dz, minY + random.nextInt(1, 4), z + dx,",
						"BlockState('minecraft:furnace', facing: direction)",
					"),",
					"setBlockState(midX + radiusX * dx, minY + 1, midZ + radiusZ * dz, 'minecraft:crafting_table'),",
					"(",
						"setBlockState(x, minY + 1, z, BlockState('minecraft:chest', facing: direction))",
						"mergeBlockData(x, minY + 1, z, nbtCompound(",
							"LootTable: 'bigglobe:chests/surface_mineshaft',",
							"LootTableSeed: random.nextLong()",
						"))",
					")",
				")",
			")",
		")",

		";collapsed rooms.",
		"else random.if (",
			"class ColumnPos(int*(x, z))",
			"class ColumnData(int*(y1, y2), boolean done = false)",
			"ColumnPos columnPos = new()",
			"HashMap map = new((maxX - minX - 1) * (maxZ - minZ - 1))",
			"int xMask = 1 << (maxX - minX - 2) - 1",
			"int zMask = 1 << (maxZ - minZ - 2) - 1",
			"while collapseLoop (true:",
				"int x = minX + bitCount(random.nextInt() & xMask) + 1",
				"int z = minZ + bitCount(random.nextInt() & zMask) + 1",
				"ColumnData columnData = map.get(columnPos.$x(x).$z(z))",
				"if (columnData == null: map.put(columnPos =: new(x, z), columnData := new(minY, data.maxY.asInt() - 1)))",
				"if (++columnData.y2 :++columnData.y1 >= data.maxY.asInt(): break(collapseLoop))",
				"if (!columnData.done && isPositionValid(x, columnData.y1, z):",
					"BlockState lower = getBlockState(x, columnData.y1, z)",
					"BlockState upper = getBlockState(x, columnData.y2, z)",
					"if (lower.isAir() && upper.hasFullCubeOutline():",
						"setBlockState(x, columnData.y1, z, upper)",
						"setBlockState(x, columnData.y2, z, 'minecraft:air')",
					")",
					"else (",
						"columnData.done = true",
					")",
				")",
			")",
		")",

		";cobweb.",
		"setBlockStateReplaceable(random.if (minX + 1) else (maxX - 1), minY + 3, random.if (minZ + 1) else (maxZ - 1), 'minecraft:cobweb')"
	]
}