{
	"raw_placement": [
		"int*(",
			"iterations = data.scale",
			"iterMinX = max(minX, chunkMinX)",
			"iterMinY = max(minY, chunkMinY)",
			"iterMinZ = max(minZ, chunkMinZ)",
			"iterMaxX = min(maxX, chunkMaxX)",
			"iterMaxY = min(maxY, chunkMaxY)",
			"iterMaxZ = min(maxZ, chunkMaxZ)",
		")",
		"BlockState state = data.state.asString().as(BlockState)",
		"boolean iterate(int*(x, y, z):",
			"int step = 1 << (iterations - 1)",
			"repeat (iterations:",
				"if      (x > y && x > z: x = abs(x - step))",
				"else if (y > x && y > z: y = abs(y - step))",
				"else if (z > x && z > y: z = abs(z - step))",
				"else (break())",
				"step >>= 1",
			")",
			"return(x == 0 && y == 0 && z == 0)",
		")",
		"for positionLoop (",
			"int y in range[iterMinY, iterMaxY],",
			"int z in range[iterMinZ, iterMaxZ],",
			"int x in range[iterMinX, iterMaxX]",
		":",
			"int*(",
				"iterX = abs(x - midX)",
				"iterY = abs(y - midY)",
				"iterZ = abs(z - midZ)",
			")",
			"if (",
				"iterate(iterX, iterY, iterZ) || (",
					"+ int(iterate(iterX + 1, iterY, iterZ))",
					"+ int(iterate(iterX - 1, iterY, iterZ))",
					"+ int(iterate(iterX, iterY + 1, iterZ))",
					"+ int(iterate(iterX, iterY - 1, iterZ))",
					"+ int(iterate(iterX, iterY, iterZ + 1))",
					"+ int(iterate(iterX, iterY, iterZ - 1))",
					">= 4",
				")",
			":",
				"setBlockState(x, y, z, state)",
			")",
		")"
	],
	"placement": "noop"
}