{
	"script": [
		"void placeFlower(int x, int y, int z:",
			"setBlockState(x, y, z, 'minecraft:grass_block[snowy=false]')",
			"placeBlockState(x, y + 1, z, BlockTag('bigglobe:small_house_structure_flowers').random().getRandomState())",
		")",

		"WoodPalette palette = WoodPalette(data.palette.asString())",

		";main building.",
		"for (int offsetY = 0, offsetY < 5, ++offsetY:",
			"for (int offsetZ = -2, offsetZ <= 2, ++offsetZ:",
				"for (int offsetX = -2, offsetX <= 2, ++offsetX:",
					"setBlockState(midX + offsetX, minY + offsetY, midZ + offsetZ,",
						"if (abs(offsetX) == 2 && abs(offsetZ) == 2:",
							"palette.logState(axis: 'y')",
						")",
						"else if (abs(offsetX) == 2 || abs(offsetZ) == 2:",
							"if (offsetY == 4:",
								"palette.logState(axis: abs(offsetX) > abs(offsetZ) ? 'z' : 'x')",
							")",
							"else (",
								"'minecraft:cobblestone'",
							")",
						")",
						"else (",
							"offsetY == 0 ? palette.planksState() : 'minecraft:air'",
						")",
					")",
				")",
			")",
		")",

		";top level of main building.",
		"for (int offsetZ = -2, offsetZ <= 2, ++offsetZ:",
			"BlockState state = abs(offsetZ) == 2 ? 'minecraft:cobblestone' : palette.planksState()",
			"for (int offsetX = -1, offsetX <= 1, ++offsetX:",
				"setBlockState(midX + offsetX, minY + 5, midZ + offsetZ, state)",
			")",
		")",

		";roof.",
		"for (int offsetX = -3, offsetX <= 3, ++offsetX:",
			"int y = minY + 7 - abs(offsetX)",
			"BlockState state = compare (offsetX:",
				"case (<: palette.stairsState(facing: 'east'))",
				"case (>: palette.stairsState(facing: 'west'))",
				"case (=: palette.slabState())",
			")",
			"for (int offsetZ = -3, offsetZ <= 3, ++offsetZ:",
				"setBlockState(midX + offsetX, y, midZ + offsetZ, state)",
			")",
			"if (abs(offsetX) != 3:",
				"--y",
				"state = compare (offsetX:",
					"case (<: palette.stairsState(facing: 'west', half: 'top'))",
					"case (>: palette.stairsState(facing: 'east', half: 'top'))",
					"case (=: palette.planksState())",
				")",
				"int increment = offsetX == 0 ? 1 : 6",
				"for (int offsetZ = -3, offsetZ <= 3, offsetZ += increment:",
					"setBlockState(midX + offsetX, y, midZ + offsetZ, state)",
				")",
			")",
		")",

		";door.",
		"String hinge = random.if ('left') else ('right')",
		"setBlockState(midX, minY + 1, midZ - 2, palette.doorState(facing: 'south', half: 'lower', hinge: hinge, open: false, powered: false))",
		"setBlockState(midX, minY + 2, midZ - 2, palette.doorState(facing: 'south', half: 'upper', hinge: hinge, open: false, powered: false))",

		";stairs leading up to door.",
		"setBlockState(midX, minY, midZ - 3, 'minecraft:cobblestone_stairs[facing=south,half=bottom,shape=straight,waterlogged=false]')",
		"setBlockState(midX - 1, minY, midZ - 3, 'minecraft:cobblestone_stairs[facing=east,half=bottom,shape=outer_right,waterlogged=false]')",
		"setBlockState(midX + 1, minY, midZ - 3, 'minecraft:cobblestone_stairs[facing=west,half=bottom,shape=outer_left,waterlogged=false]')",

		";windows.",
		"setBlockState(midX - 2, minY + 2, midZ, 'minecraft:glass_pane[north=true,south=true,east=false,west=false,waterlogged=false]')",
		"setBlockState(midX + 2, minY + 2, midZ, 'minecraft:glass_pane[north=true,south=true,east=false,west=false,waterlogged=false]')",
		"setBlockState(midX, minY + 2, midZ + 2, 'minecraft:glass_pane[north=false,south=false,east=true,west=true,waterlogged=false]')",

		";flower beds",
		"for (int offsetZ = -1, offsetZ <= 1, ++offsetZ:",
			"placeFlower(midX - 3, minY, midZ + offsetZ)",
			"placeFlower(midX + 3, minY, midZ + offsetZ)",
			"setBlockState(midX - 4, minY, midZ + offsetZ, palette.trapdoorState(facing: 'west', half: 'top', open: true, powered: false, waterlogged: false))",
			"setBlockState(midX + 4, minY, midZ + offsetZ, palette.trapdoorState(facing: 'east', half: 'top', open: true, powered: false, waterlogged: false))",
		")",
		"setBlockState(midX - 3, minY, midZ - 2, palette.trapdoorState(facing: 'north', half: 'top', open: true, powered: false, waterlogged: false))",
		"setBlockState(midX + 3, minY, midZ - 2, palette.trapdoorState(facing: 'north', half: 'top', open: true, powered: false, waterlogged: false))",
		"setBlockState(midX - 3, minY, midZ + 2, palette.trapdoorState(facing: 'south', half: 'top', open: true, powered: false, waterlogged: false))",
		"setBlockState(midX + 3, minY, midZ + 2, palette.trapdoorState(facing: 'south', half: 'top', open: true, powered: false, waterlogged: false))",

		"for (int offsetX = -1, offsetX <= 1, ++offsetX:",
			"placeFlower(midX + offsetX, minY, midZ + 3)",
			"setBlockState(midX + offsetX, minY, midZ + 4, palette.trapdoorState(facing: 'south', half: 'top', open: true, powered: false, waterlogged: false))",
		")",
		"setBlockState(midX - 2, minY, midZ + 3, palette.trapdoorState(facing: 'west', half: 'top', open: true, powered: false, waterlogged: false))",
		"setBlockState(midX + 2, minY, midZ + 3, palette.trapdoorState(facing: 'east', half: 'top', open: true, powered: false, waterlogged: false))",

		";interior.",
		"int flip = random.if (1) else (-1)",
		"Block bed = random.switch (",
			"'minecraft:white_bed',      'minecraft:orange_bed', 'minecraft:magenta_bed', 'minecraft:light_blue_bed',",
			"'minecraft:yellow_bed',     'minecraft:lime_bed',   'minecraft:pink_bed',    'minecraft:gray_bed',",
			"'minecraft:light_gray_bed', 'minecraft:cyan_bed',   'minecraft:purple_bed',  'minecraft:blue_bed',",
			"'minecraft:brown_bed',      'minecraft:green_bed',  'minecraft:red_bed',     'minecraft:black_bed'",
		")",
		"setBlockState(midX + flip, minY + 1, midZ, BlockState(bed, facing: 'south', part: 'foot', occupied: false))",
		"setBlockState(midX + flip, minY + 1, midZ + 1, BlockState(bed, facing: 'south', part: 'head', occupied: false))",
		"setBlockState(midX - flip, minY + 1, midZ + 1, 'minecraft:crafting_table')",
		"setBlockState(midX, minY + 3, midZ - 1, 'minecraft:wall_torch[facing=south]')",

		";summon villager",
		"summon('minecraft:villager', midX + 0.5L, minY + 1.0L, midZ + 0.5L)"
	]
}