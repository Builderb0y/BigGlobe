{
	"script": [
		"unless (getBlockState(originX, originY, originZ).isReplaceable(): return(false))",
		"unless (getBlockState(originX, originY + 1, originZ).hasFullCubeOutline(): return(false))",

		"class Pos (int*(x, y, z))",

		"ArrayList queue = new(SIZE)",
		"queue.add(Pos.new(originX, originY, originZ))",
		"setBlockState(originX, originY, originZ, STATE)",
		"for (int loop in range[0, SIZE):",
			"int*(dx = 0, dy = 0, dz = 0)",
			"if (loop == 0:",
				"dy = -1",
			")",
			"else (",
				"random.switch(dx = -1, dx = +1, dy = -1, dy = +1, dz = -1, dz = +1)",
			")",

			"boolean placeIfValid(int x, int y, int z:",
				"boolean noGlowstoneAt(int dx2, int dy2, int dz2:",
					"return(",
						"(dx2 == dx && dy2 == dy && dz2 == dz) ||",
						"getBlockState(x + dx2, y + dy2, z + dz2) != STATE",
					")",
				")",
				"(",
					"getBlockState(x, y, z).isReplaceable() &&",
					"noGlowstoneAt(-1,  0,  0) &&",
					"noGlowstoneAt(+1,  0,  0) &&",
					"noGlowstoneAt( 0, -1,  0) &&",
					"noGlowstoneAt( 0, +1,  0) &&",
					"noGlowstoneAt( 0,  0, -1) &&",
					"noGlowstoneAt( 0,  0, +1)",
				")",
				".if (",
					"setBlockState(x, y, z, STATE)",
					"queue.add(Pos.new(x, y, z))",
				")",
			")",

			"Pos pos = queue.get(random.nextInt(queue.size()))",
			"int posDist = random.nextInt(1, 3)",
			"int negDist = random.nextInt(1, 3)",
			"for (int loop2 in range[1, posDist]:",
				"unless (placeIfValid(pos.x - dx * loop2, pos.y - dy * loop2, pos.z - dz * loop2):",
					"break()",
				")",
			")",
			"dx = -dx,, dy = -dy,, dz = -dz",
			"for (int loop2 in range[1, negDist]:",
				"unless (placeIfValid(pos.x - dx * loop2, pos.y - dy * loop2, pos.z - dz * loop2):",
					"break()",
				")",
			")",
		")",
		"return(true)"
	],
	"inputs": [
		{ "name": "SIZE",  "type": "int"        },
		{ "name": "STATE", "type": "BlockState" }
	]
}