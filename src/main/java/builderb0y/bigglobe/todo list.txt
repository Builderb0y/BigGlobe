bug fixes:
	geode spikes can still spawn outside of geodes.
	creating a world with the custom time speed gamerule either doesn't get setup properly, or doesn't sync to clients properly.
		this is a fabric bug.

testing:
	cubic chunks compatibility, whenever that's released.
	compatibility with chunk pre-generator mods.
		"chunky" is the one reported to me, and apparently it either
		uses up a stupid amount of RAM, or has a memory leak.

where I left off:
	small farms next to small houses.

changelog:
	* Added underground pockets in the overworld (water, lava, empty, natural, mushroom, and deep variants) and in the nether (lava and soul lava variants).
	* Script features now have a flag to randomly rotate the feature when placing it.
	* Added column values for vanilla worlds.
	* Structures are now scriptable.
		* Campfires are now a scripted structure. Campfires in existing worlds may fail to be read from NBT. Errors in your log file related to this can be mostly ignored, but campfires which were previously on the boundary of generated chunks may be cut off.
	* Overworld cave width is now a script. This is a world breaking change, but you can get around it for existing worlds by enabling "Reload Big Globe chunk generators from mod jar" in the mod's config file.
	* Fixed some interactions between snow and cliffs.
	* Maybe fixed cliffs being a bit too eager to show up. I say maybe because I don't remember if this was an issue previously, or if I added it while fixing snow.
	* Skylands now have flowers.
	* Nether biomes are now a dynamic registry. This makes it easier to add new biomes to the nether, but also means existing worlds will break at the boundary of generated chunks.
	* Wood palettes are now a dynamic registry. The old files in Big Globe's config folder are no longer used.
	* Wood palettes are now available to some scripts.
		* Bushes are now a scripted feature. This will not affect existing worlds.

AutoCodec:
	log when extra data is provided that isn't a field of the object being deserialized.
	logging for Field/MethodPredicate?
	better handling of default objects:
		@DefaultGet: gets an object from a field or method.
			field can be of type T_Decoded or AutoDecoder<T_Decoded>.
			method can have a return type of T_Decoded or AutoDecoder<T_Decoded>.
			method can take a DecodeContext<T_Encoded> as a parameter, or nothing as a parameter.
			this could also target a constructor.
	builtin framework for key dispatching.
	VerifyNullable.INSTANCE should override toString().
	investigate imprinters.
		SerializableScriptInputs failed to have a coder created for the imprinter path.

scripting:
	SwitchInsnTree needs to manage its case scopes more manually.
	expose arrays.
	ability to break or continue nested loops.
	scriptable RandomSource?
	pre and post update operators.
	increment and decrement as expression.
	postfix increment and decrement.
	compareTo operator <=>

features:
	general:
		advancements for finding things?
		all the todos scattered throughout my code.
		dynamic registries for all the things!
	overworld:
		configurable bedrock amount.
		scripted structures:
			small house.
				with optional nearby farm.
		desert fossils.
		fallen logs.
		better configurability of biomes.
		column values for cliff frac and cliff bias.
		allow flowers to place a Feature for every flower.
		ice spikes.
		glaciers.
		log cabin structure?
		trees:
			roots.
				use for mangrove trees.
		cave biomes:
			lush:
				walls:
					glow lichen.
					vines.
			mushroom:
				glowing mushrooms?
					that hang from the ceiling?
		make geode placement faster by only computing noise in a sphere instead of a cube.
		make underground pocket placement faster by only computing noise in a circle instead of a square.
		dungeons:
			cobwebs on ceiling corners.
			skulls on floor.
			redstone torches on walls.
			chains on ceiling.
			piles of gold?
			occasional "big rooms".
			collapsed rooms?
				blocks in the ceiling (and possibly slightly above it) fall onto the floor.
			Feature that spawns in every room.
				or possibly tag of features.
		underground bubbles:
			molten? (match molten caves)
		make lilypads renewable?
	nether:
	end:
		jessie wants worley noise for the end.
			convex.

before release:
	make sure nothing in test package is used.
	disable BigGlobeItems.TEST_ITEM.
	ensure BigGlobeChunkGenerator.WORLD_SLICES is set to false.

porting:
	add sniffer_diggable_block tag to include overgrown podzol.
	add hanging signs to WoodBlockSet.
	check how ChunkSection counts are used.
		in particular, see if nonEmptyFluidCount is still returned by hasRandomFluidTicks().
		this usage matters for SectionGenerationContext.recalculateCounts().