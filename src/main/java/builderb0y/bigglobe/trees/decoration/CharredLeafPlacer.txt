package builderb0y.bigglobe.trees.decoration;

import java.util.Random;

import net.minecraft.block.BlockState;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.ISeedReader;
import net.minecraft.world.StructureWorldAccess;

import builderb0y.bigglobe.biomes.BigGlobeBiomeKeys;
import builderb0y.bigglobe.blocks.BlockStates;
import builderb0y.bigglobe.noise.Permuter;
import builderb0y.bigglobe.trees.TreeGenerator;
import builderb0y.bigglobe.util.Enums;

public class CharredLeafPlacer implements BlockDecorator {

	public final double fireChance;

	public CharredLeafPlacer(double fireChance) {
		this.fireChance = fireChance;
	}

	@Override
	public void decorate(TreeGenerator generator, StructureWorldAccess world, BlockPos branchPos, BlockState branchState, Random random) {
		if (Permuter.nextBoolean(random, this.fireChance)) {
			BlockPos firePos = branchPos.up();
			if (TreeGenerator.canLeavesReplace(generator.queue.getBlockState(world, firePos))) {
				generator.queue.queueBlock(firePos, BigGlobeBiomeKeys.isSoulSandBiome(world, firePos) ? BlockStates.SOUL_FIRE : BlockStates.FIRE);
			}
		}
		else {
			BlockPos leafPos = branchPos.offset(Permuter.choose(Enums.DIRECTIONS, random));
			if (TreeGenerator.canLeavesReplace(generator.queue.getBlockState(world, leafPos))) {
				generator.queueAndDecorateLeaf(world, leafPos, generator.palette.getLeaves(1, false), random);
			}
		}
	}
}